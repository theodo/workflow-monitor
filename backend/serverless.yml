service:
  name: caspr

plugins:
  - serverless-plugin-warmup-ts-bridge
  - serverless-plugin-warmup
  - serverless-plugin-typescript
  - serverless-plugin-optimize
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  accountId: !Ref AWS::AccountId
  serverless-offline:
    host: 0.0.0.0
    port: 4000
    websocketPort: 4001
  warmup:
    enabled: true
    events:
      - schedule: 'cron(0/4 6-21 ? * MON-FRI *)' # Run WarmUp every 4 minutes Mon-Fri between 6:00am and 8:55pm (UTC)

provider:
  name: aws
  runtime: nodejs10.x
  region: ${env:REGION}
  stage: ${env:NODE_ENV}

  vpc:
    securityGroupIds:
      - {"Fn::ImportValue": "CasprLambdaSecurityGroup"}
    subnetIds:
      - {"Fn::ImportValue": "CasprSubnetA"}
      - {"Fn::ImportValue": "CasprSubnetB"}
      - {"Fn::ImportValue": "CasprSubnetC"}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - execute-api:ManageConnections # To allow lambdas to send messages back to websocket
      Resource:
        'Fn::Join':
          - ""
          - - "arn:aws:execute-api:"
            - { "Ref": "AWS::Region" }
            - ':'
            - { Ref: "AWS::AccountId" }
            - ":*/${env:NODE_ENV}/POST/@connections/*"

    - Effect: Allow
      Action:
        - lambda:InvokeFunction # To allow warm-up lambdas to trigger the other lambdas
      Resource:
        'Fn::Join':
          - ""
          - - "arn:aws:lambda:"
            - { "Ref": "AWS::Region" }
            - ':'
            - { Ref: "AWS::AccountId" }
            - ":function:*"

package:
  include:
    - src/**/*.graphql
    - migrations

functions:
  api:
    handler: src/nestjs/lambda.handler
    events:
      - http:
          method: any
          path: /{proxy+}

  ws-default:
    handler: src/ws-default/lambda.handler
    events:
      - websocket:
          route: $default
  ws-diconnect:
    handler: src/ws-disconnect/lambda.handler
    events:
      - websocket:
          route: $disconnect
    warmup:
      enabled: false
  migrations:
    handler: src/migrations/lambda.handler
    stage: prod
    events:
      - http:
          method: post
          path: /migrations
          authorizer: aws_iam
    warmup:
      enabled: false

